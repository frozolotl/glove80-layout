#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define POS_LH_T1 52
#define POS_LH_T2 53
#define POS_LH_T3 54
#define POS_LH_T4 69
#define POS_LH_T5 70
#define POS_LH_T6 71
#define POS_LH_C1R2 15
#define POS_LH_C1R3 27
#define POS_LH_C1R4 39
#define POS_LH_C1R5 51
#define POS_LH_C2R1 4
#define POS_LH_C2R2 14
#define POS_LH_C2R3 26
#define POS_LH_C2R4 38
#define POS_LH_C2R5 50
#define POS_LH_C2R6 68
#define POS_LH_C3R1 3
#define POS_LH_C3R2 13
#define POS_LH_C3R3 25
#define POS_LH_C3R4 37
#define POS_LH_C3R5 49
#define POS_LH_C3R6 67
#define POS_LH_C4R1 2
#define POS_LH_C4R2 12
#define POS_LH_C4R3 24
#define POS_LH_C4R4 36
#define POS_LH_C4R5 48
#define POS_LH_C4R6 66
#define POS_LH_C5R1 1
#define POS_LH_C5R2 11
#define POS_LH_C5R3 23
#define POS_LH_C5R4 35
#define POS_LH_C5R5 47
#define POS_LH_C5R6 65
#define POS_LH_C6R1 0
#define POS_LH_C6R2 10
#define POS_LH_C6R3 22
#define POS_LH_C6R4 34
#define POS_LH_C6R5 46
#define POS_LH_C6R6 64
#define POS_RH_T1 57
#define POS_RH_T2 56
#define POS_RH_T3 55
#define POS_RH_T4 74
#define POS_RH_T5 73
#define POS_RH_T6 72
#define POS_RH_C1R2 16
#define POS_RH_C1R3 28
#define POS_RH_C1R4 40
#define POS_RH_C1R5 58
#define POS_RH_C2R1 5
#define POS_RH_C2R2 17
#define POS_RH_C2R3 29
#define POS_RH_C2R4 41
#define POS_RH_C2R5 59
#define POS_RH_C2R6 75
#define POS_RH_C3R1 6
#define POS_RH_C3R2 18
#define POS_RH_C3R3 30
#define POS_RH_C3R4 42
#define POS_RH_C3R5 60
#define POS_RH_C3R6 76
#define POS_RH_C4R1 7
#define POS_RH_C4R2 19
#define POS_RH_C4R3 31
#define POS_RH_C4R4 43
#define POS_RH_C4R5 61
#define POS_RH_C4R6 77
#define POS_RH_C5R1 8
#define POS_RH_C5R2 20
#define POS_RH_C5R3 32
#define POS_RH_C5R4 44
#define POS_RH_C5R5 62
#define POS_RH_C5R6 78
#define POS_RH_C6R1 9
#define POS_RH_C6R2 21
#define POS_RH_C6R3 33
#define POS_RH_C6R4 45
#define POS_RH_C6R5 63
#define POS_RH_C6R6 79

&sk { quick-release; };

&lt {
    quick-tap-ms = <150>;
    require-prior-idle-ms = <85>;
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <85>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 6 7 8 9 16 17 18 19 20 21 28 29 30 31 32 33 40 41 42 43 44 45 56 57 58 59 60 61 62 63 74 75 76 77 78 79 55 72 73 69 70 71 54 53 52>;
            hold-trigger-on-release;
            quick-tap-ms = <150>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            require-prior-idle-ms = <85>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 15 22 23 24 25 26 27 34 35 36 37 38 39 46 47 48 49 50 51 52 53 54 64 65 66 67 68 69 70 71 55 56 57 74 73 72>;
            quick-tap-ms = <150>;
        };

        smart_shift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            label = "SMART_SHIFT";
            bindings = <&sk LSHFT>, <&caps_word>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        layer_main {
            bindings = <
&none    &none        &none        &none         &none                                                                                        &none         &none         &none        &none        &mo 5
&none    &kp N3       &kp N2       &kp N1        &kp N0        &kp N4                                                                 &kp N7  &kp N6        &kp N5        &kp N9       &kp N8       &none
&none    &kp Q        &kp H        &kp O         &kp U         &kp DOT                                                                &kp G   &kp D         &kp L         &kp F        &kp B        &none
&kp ESC  &hml LALT Y  &hml LGUI I  &hml LCTRL E  &hml LSHFT A  &kp COMMA                                                              &kp M   &hmr LSHFT S  &hmr LCTRL R  &hmr LGUI N  &hmr LALT W  &kp TAB
&none    &kp J        &kp SQT      &kp SLASH     &kp UNDER     &kp X      &smart_shift  &none     &none      &none  &none    &none    &kp V   &kp K         &kp C         &kp P        &kp Z        &none
&none    &none        &none        &sl 4         &sl 3                    &lt 2 SPACE   &kp BSPC  &kp DEL    &none  &kp RET  &lt 1 T          &none         &none         &none        &none        &none
            >;
        };

        layer_symbols {
            bindings = <
&trans  &trans          &trans          &trans           &trans                                                                                   &trans            &trans           &trans          &trans          &trans
&trans  &trans          &trans          &trans           &trans            &trans                                                       &trans    &trans            &trans           &trans          &trans          &trans
&trans  &kp RA(E)       &kp RA(S)       &kp RA(O)        &kp RA(U)         &kp MINUS                                                    &kp PLUS  &kp SEMI          &kp DQT          &kp GRAVE       &kp DLLR        &trans
&trans  &hml LALT AMPS  &hml LGUI LBRC  &hml LCTRL LPAR  &hml LSHFT RA(A)  &kp QMARK                                                    &kp EXCL  &hmr LSHFT COLON  &hmr LCTRL RPAR  &hmr LGUI RBRC  &hmr LALT AMPS  &trans
&trans  &kp TILDE       &kp HASH        &kp LBKT         &kp LT            &kp BSLH   &trans  &trans  &trans    &trans  &trans  &trans  &kp STAR  &kp GT            &kp RBKT         &kp AT          &kp CARET       &trans
&trans  &trans          &trans          &trans           &trans                       &trans  &trans  &trans    &trans  &trans  &trans            &trans            &trans           &trans          &trans          &trans
            >;
        };

        layer_nav {
            bindings = <
&trans  &trans    &trans         &trans       &trans                                                                       &trans      &trans     &trans    &trans    &trans
&trans  &trans    &trans         &trans       &trans     &trans                                                    &trans  &trans      &trans     &trans    &trans    &trans
&trans  &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans                                                    &trans  &trans      &trans     &trans    &trans    &trans
&trans  &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans                                                    &trans  &kp LSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &trans
&trans  &trans    &trans         &trans       &trans     &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans      &trans     &trans    &trans    &trans
&trans  &trans    &trans         &trans       &trans             &trans  &trans  &trans    &trans  &trans  &trans          &trans      &trans     &trans    &trans    &trans
            >;
        };

        layer_system {
            bindings = <
&trans  &trans      &trans      &trans            &trans                                                                        &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans      &trans            &trans      &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans      &trans            &trans      &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_PREV  &kp C_NEXT  &kp C_PLAY_PAUSE  &kp C_MUTE  &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans      &trans            &trans      &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans      &trans            &trans              &trans  &trans  &trans    &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_fn {
            bindings = <
&trans  &trans  &trans  &trans   &trans                                                                     &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans   &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &kp F12  &kp F11  &trans                                                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp F3  &kp F2  &kp F1   &kp F10  &kp F4                                                    &kp F7  &kp F6  &kp F5  &kp F9  &kp F8  &trans
&trans  &kp F7  &kp F6  &kp F5   &kp F9   &kp F8  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans   &trans           &trans  &trans  &trans    &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_magic {
            bindings = <
&bt BT_CLR   &none            &none            &none            &none                                                                                       &none  &none  &none  &none  &bt BT_CLR_ALL
&none        &none            &none            &none            &none            &none                                                               &none  &none  &none  &none  &none  &none
&none        &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                     &none  &none  &none  &none  &none  &none
&bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                     &none  &none  &none  &none  &none  &bootloader
&sys_reset   &none            &none            &none            &none            &none            &bt_2  &bt_3  &none           &none  &none  &none  &none  &none  &none  &none  &none  &sys_reset
&none        &none            &none            &none            &none                             &bt_0  &bt_1  &out OUT_USB    &none  &none  &none         &none  &none  &none  &none  &trans
            >;
        };
    };
};
